//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MaestroDetalleDemo.Models
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;

    public partial class TB_DEMANDANTE
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public TB_DEMANDANTE()
        {
            this.TB_DEMANDA = new HashSet<TB_DEMANDA>();
        }
    
        public string COD_DANTE { get; set; }
        public string NOM_DANTE { get; set; }
        public string APEPAT_DANTE { get; set; }
        public string APEMAT_DANTE { get; set; }
        public string DNI_DANTE { get; set; }
        public string DOMREAL_DANTE { get; set; }
        public string DOMLEG_DANTE { get; set; }
        public string COD_REPRE { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TB_DEMANDA> TB_DEMANDA { get; set; }
        public virtual TB_REPRESENTANTE TB_REPRESENTANTE { get; set; }

        public List<TB_DEMANDANTE> Listar(int pageIndex, int pageSize, out int pageCount)
        {
            List<TB_DEMANDANTE> orders = new List<TB_DEMANDANTE>();
            using (SqlConnection conexion = new SqlConnection("Data Source=ARANTXA-PC\\SQLEXPRESS;Initial Catalog=PODER_JUDICIAL;Integrated Security=True;"))
            {
                conexion.Open();
                using (SqlCommand comando = new SqlCommand("Usp_demandante_Listar", conexion))
                {
                    comando.CommandType = CommandType.StoredProcedure;
                    comando.CommandTimeout = 0;
                    comando.Parameters.AddWithValue("@pageIndex", pageIndex);
                    comando.Parameters.AddWithValue("@pageSize", pageSize);
                    comando.Parameters.AddWithValue("@pageCount", 0).Direction = ParameterDirection.Output;
                    using (SqlDataReader reader = comando.ExecuteReader())
                    {
                        if (reader != null)
                        {
                            TB_DEMANDANTE order = null;
                            while (reader.Read())
                            {
                                order = new TB_DEMANDANTE();
                                order.COD_DANTE = (String)reader["COD_DANTE"];
                                order.NOM_DANTE = (String)reader["NOM_DANTE"];
                                order.APEPAT_DANTE = (String)reader["APEPAT_DANTE"];
                                order.APEMAT_DANTE = (String)reader["APEMAT_DANTE"];
                                order.DNI_DANTE = (String)reader["DNI_DANTE"];
                                order.DOMREAL_DANTE = (String)reader["DOMREAL_DANTE"];
                                order.DOMLEG_DANTE = (String)reader["DOMLEG_DANTE"];
                                order.COD_REPRE = (String)reader["COD_REPRE"];
                                orders.Add(order);
                            }
                        }
                    }

                    pageCount = (int)comando.Parameters["@pageCount"].Value;
                }
            }
            return orders;
        }


        public String generarCodigo()
        {
            String codigo = "";
            using (SqlConnection conexion = new SqlConnection("Data Source=ARANTXA-PC\\SQLEXPRESS;Initial Catalog=PODER_JUDICIAL;Integrated Security=True;"))
            {
                conexion.Open();
                using (SqlCommand comando = new SqlCommand("cagDemandante", conexion))
                {
                    comando.CommandType = CommandType.StoredProcedure;

                    codigo = comando.ExecuteScalar().ToString();
                }


                return codigo;
            }

        }

        public String generarCodigoDetalle()
        {
            String codigo = "";
            using (SqlConnection conexion = new SqlConnection("Data Source=ARANTXA-PC\\SQLEXPRESS;Initial Catalog=PODER_JUDICIAL;Integrated Security=True;"))
            {
                conexion.Open();
                using (SqlCommand comando = new SqlCommand("cagDemandanteDetalle", conexion))
                {
                    comando.CommandType = CommandType.StoredProcedure;

                    codigo = comando.ExecuteScalar().ToString();
                }


                return codigo;
            }

        }
    }
}
